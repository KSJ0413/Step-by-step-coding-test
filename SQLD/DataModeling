모델링의 특징  1)추상화 2)단순화 3)명확화(정확화)

모델링이란
1)정보시스템 구축을 위한 데이터관점, 프로세스관점의 업무 분석.
2)데이터베이스 구축을 위한 분석 및 설계하는 과정의 의미.

모델링의 유의점
1)중복
2)비유연성
3)비일관성

ANSI-SPARC
1)DB구축을 위한 추상적인 설계표준으로 DB구조를 크게
외부 단계: 개별 사용자들의 관점
개념 단계: 전체 DB의 논리적 구조를 기술
내부 단계: DB에 어떤 데이터가 어떻게 저장되어 있는지 기술
구분한다.

Entity 특징 ->테이블   * 속성-> 컬럼 , 인스턴스 ->rows *
1)반드시 해당 업무에서 필요하며 관리하고자 하는 정보
2)지속적으로 존재하는 2개 이상의 인스턴스의 집합
3)반드시 속성을 가져야 함
4)엔터티는 다른 엔터티와 최소 한 개 이상의 관계가 있어야 한다
5)유일한 식별자에 의해 식별이 가능해야 한다.

발생시점에 따른 분류
기본 엔터티: 독립적으로 생성가능, 주식벽자를 상속받지 않고 자신의 주식별자를 가짐, 다른 엔터티의 부모역활
중심 엔터티: 기본 엔터티로부터 발생, 해당 업무에서 중심역활(예:계약, 대출, 주문 등..)
행위 엔터티: 2개 이상의 부모 엔터티로부터 발생, 자주 내용이 바뀌거나 데이터 양이 증가(예:변경이력,주문목록 등..)

유무에 따른 분류
유형 엔터티: 물리적인 형태가 있고 안정적이며 지속적으로 활용(사원,상품 등..)
개념 엔터티: 물리적인 형태가 없고 관리해야 할 개념적 정보(회사, 조직 등..)
무형 엔터티: 업무 수행에 따라 비교적 많이 발생 (주문,배송 등..)

엔터티 명명 기준
1) 업무 용어를 사용
2) 약어 사용은 자제   약어:줄임말
3) 단수 명사 사용
4) 유일한 이름을 부여
5) 생성하는 의미대로 이름 부여

엔터티, 인스턴스, 속성, 속성값의 관계
1) 한 개의 엔터티는 두 개 이상의 인스턴스의 집합이어야 한다
2) 한 개의 엔터티는 두 개 이상의 속성을 갖는다.
3) 한 개의 속성은 한 개의 속성값을 갖는다

속성의 특성에 따른 분류
기본 속성: 업무상 필요한 데이터에 대해 정의. 코드 성 데이터, 일련번호, 계산에 의 생성된 속성 등은 제외.
설계 속성: 업무를 규칙화하기 위해 새로 만들거나 변형한 속성. 코드 성 데이터, 일련번호 등.
파생 속성: 다른 속성의 영향을 받아 발생. 주로 계산된 값들 이에 해당. 가급적 적게 정의하는 것이 좋다.

엔터티 구성방식에 따른 분류
PK 속성
FK 속성
일반 속성

도메인(Domain): 속성 값의 데이터 타입과 크기, 추가적이 제약사항으로 생각할 수 있다.

관계의 표기법
1) 관계명: 관계 시작점, 관계 끝점  (관계의 이름)
2) 관계차수: 1:1, 1:M, M:N
3)관계선택사양: 필수관계, 선택관계

식별자의 종류
1) 주식별자: 엔터티 내에서 대표성을 가지는가
2) 내부식별자, 외부식별자: 엔터티 내에서 스스로 생성되었는지 여부에 따라
3) 단일식별자, 복합식별자: 단일 속성으로 식별이 되는가
4)본질식별자, 인조식별자: 원래 업무적으로 의미가 있던 식별자 속성을 대체하여 일련번호와 같이 새롭게 만든 식별자를 구분

주식별자 고려사항
유일성, 최소성, 불변성, 존재성

데이터 모델과 성능-------------------------------------------------

성능 데이터모델링: 분석 및 설계 단계에서부터 성능과 관련한 데이터모델링을 수행하는 것!
예: 정규화, 반정규화, 테이블 분할, 테이블 병합, 테이블 추가, 칼럼 추가, PK/FK 조정, 슈퍼타입/서브타입 조정 등

정규화: 데이터가 꼬이는 걸 막기 위해 테이블을 잘게 나누는 것.
1) 제 1정규형 = 모든 속성은 반드시 하나의 값만 가져야한다.
2) 제 2정규형 = 모든 속성은 반드시 모든 키에 종속되어야한다.
3) 제 3정규형 = 기본키가 아닌 모든 속성간에는 서로 종속되 수 없다.

반정규화: 성능향상을 위해서 오히려 정규화를 포기하는 것  (데이터 무결성이 보장 되지 않으므로 제한적으로 사용해야 한다.

반정규화: 칼럼추가
1) 중복칼럼 추가
2) 파생칼럼 추가
3) 이력테이블에 칼럼 추가

트랜잭션은 항상 전체를 대상으로 일괄 처리 -> 전체를 하나의 테이블로 구성 (Rollup)
트랜잭션은 항상 서브타입 개별로 처리 -> 서브타입을 개별 테이블로 구성(Rolldown)
트랜잭션은 항상 슈퍼+서브타입을 공동으로 처리 -> 슈퍼타입+서브타입 테이블로 구성 (Identity)





















